[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
  "/hopwise",
  "/tests",
  "/run_example",
  "/significance_test.py",
]

[tool.hatch.build.targets.wheel]
packages = ["hopwise"]

[tool.hatch.version]
path = "hopwise/__init__.py"

[project.scripts]
hopwise = "hopwise.cli:cli"

[project]
name = "hopwise"
description = """
_hopwise_ is an advanced extension of the Recbole library, designed to enhance recommendation systems with the power of knowledge graphs.
By integrating knowledge embedding models, path-based reasoning methods, and path language modeling apporaches, hopwise supports both recommendation and link prediction tasks with a focus on interpretability and self-explanation.
"""
authors = [
    { name = "Giacomo Medda", email = "jackm.medda@gmail.com" },
    { name = "Ludovico Boratto", email = "ludovico.boratto@acm.org" },
    { name = "Mirko Marras", email = "mirko.marras@acm.org" },
    { name = "Alessandro Soccol", email = "alessandrosoccol@gmail.com" },
]
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
dynamic = ["version"]
keywords = [
  "recommender systems",
  "knowledge graph",
  "language models",
  "path modeling",
  "explainability"
]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "numpy>=2.0.0",
    "pandas>2.0.0",
    "torch>=2.5.0",
    "transformers",
    "accelerate>=0.34.2",
    "datasets",
    "tqdm",
    "wandb",
    "igraph",
    "colorama>=0.4.4",
    "scipy>=1.12.0",
    "thop",
    "tabulate",
    "tensorboard>=2.5.0",
    "psutil",
    "texttable",
    "colorlog>=4.7.2",
    "protobuf==3.20.*",
    "joblib",
    "numba",
    "scikit-learn",
    "rich",
    "cachetools",
]

[project.optional-dependencies]
nncf = [
  "community",
  "python-louvain"
]
xgboost = [
  "xgboost"
]
ncl = [
  "faiss-cpu"
]
lightgbm = [
  "lightgbm"
]
ldiffrec = [
  "kmeans-pytorch"
]
# kgin = [
#   "torch-scatter",
# ]
hyper = [
  "hyperopt==0.2.5",
  "optuna",
  "ray[tune]"
]
all-models = [
  "hopwise[nncf]",
  "hopwise[xgboost]",
  "hopwise[ncl]",
  "hopwise[lightgbm]",
  "hopwise[ldiffrec]",
  # "hopwise[kgin]",
]
cli = [
  "click>=8.0.0",
]
cpu = [
  "dgl>=2.4.0",
]
cuda = [
  "dgl>=2.4.0",
]

[dependency-groups]
docs = [
  "sphinx",
  "furo",
  "sphinx-copybutton"
]
test = [
  "pytest-xdist",
]
lint = [
  "ruff",
  "pre-commit"
]
dev = [
  "hopwise[all-models,hyper,cli]",
  "plotly",
  "opentsne",
  "nbformat",
  {include-group = "docs"},
  {include-group = "test"},
  {include-group = "lint"},
]

[tool.tox]
requires = ["tox-uv>=1"]
env_list = ["3.12", "3.11", "3.10", "3.9"]

[tool.tox.env_run_base]
description = "uv_sync run base"
dependency_groups = ["dev", "test"]
extras = ["cuda"]
commands = [
  ["uv", "run", "--active", "hopwise", "train", "--epochs=2"],
  ["uv", "run", "--active", "hopwise", "train", "--model", "LightGCN", "--epochs=2"],
  ["uv", "run", "--active", "hopwise", "train", "--model", "KGAT", "--epochs=2"]
]

[tool.uv]
find-links = [
  "https://data.pyg.org/whl/torch-2.4.0+cu124.html"
]
dependency-metadata = [
    { name = "dgl", requires-dist = [], requires-python = ">=3.9,<=3.12" },
]

no-build-isolation-package = ["torch-scatter"]

[tool.uv.sources]
dgl = [
  { index = "dgl-win-cuda", marker = "sys_platform == 'win32' and extra == 'cuda'" },
  { index = "dgl-win-cpu", marker = "sys_platform == 'win32' and extra == 'cpu' and extra != 'cuda'" },
  { index = "dgl-cuda", marker = "sys_platform != 'win32' and extra == 'cuda'" },
  { index = "dgl-cpu", marker = "sys_platform != 'win32' and extra == 'cpu' and extra != 'cuda'" },
]

[[tool.uv.index]]
name = "dgl-win-cuda"
url = "https://data.dgl.ai/wheels/cu121/repo.html"
format = "flat"
explicit = true

[[tool.uv.index]]
name = "dgl-win-cpu"
url = "https://data.dgl.ai/wheels/repo.html"
format = "flat"
explicit = true

[[tool.uv.index]]
name = "dgl-cuda"
url = "https://data.dgl.ai/wheels/torch-2.4/cu124/repo.html"
format = "flat"
explicit = true

[[tool.uv.index]]
name = "dgl-cpu"
url = "https://data.dgl.ai/wheels/torch-2.4/repo.html"
format = "flat"
explicit = true

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.ruff]
line-length = 119

[tool.ruff.lint]
select = [
  # Pylint
  "PL",
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # isort
  "I",
  # pyupgrade
  "UP",
  # pydocstyle
  # "D",
  # pandas-vet
  # "PD"  Not working well. Confuses torch.values as df.values and suggests using .to_numpy()
]
ignore = [
    "PLR0913", # Too many arguments in function definition
    "UP031", # TEMPORARY: Use format specifiers instead of percent format
    "PLR0915", # TEMPORARY: Too many statements
    "PLR0912", # TEMPORARY: Too many branches
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403", "F405"]
"**/{tests,docs,run_example}/*" = ["D", "PLR2004"]
"**/{significance_test.py}" = ["D", "PLR2004"]
"**/hopwise/evaluator/__init__.py" = ["I"]
"**/hopwise/data/dataset/__init__.py" = ["I"]
"**/hopwise/model/knowledge_aware_recommender/pgpr.py" = ["PLR2004"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"
